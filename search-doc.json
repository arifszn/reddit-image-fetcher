[{"title":"Installation","type":0,"sectionRef":"#","url":"docs/installation","content":"Install via NPM npm install --save reddit-image-fetcher Copy Install via Yarn yarn add reddit-image-fetcher Copy Now you are good to go.","keywords":""},{"title":"Introduction","type":0,"sectionRef":"#","url":"docs/","content":"","keywords":""},{"title":"Example","type":1,"pageTitle":"Introduction","url":"docs/#example","content":"RedditImageFetcher.fetch() .then(result => { console.log(result); }); Copy Fetching  "},{"title":"Features","type":1,"pageTitle":"Introduction","url":"docs/#features","content":"Bulk imagesBulk memesBulk wallpapersCustomizableLightweight <20KB "},{"title":"Demo","type":1,"pageTitle":"Introduction","url":"docs/#demo","content":"Checkout the package is in action: https://memedb.netlify.app "},{"title":"Support","type":1,"pageTitle":"Introduction","url":"docs/#support","content":"Show your ❤️ and support by giving a ⭐ on Github. "},{"title":"License","type":1,"pageTitle":"Introduction","url":"docs/#license","content":"MIT Licensed. Copyright © MD. Ariful Alam 2021. "},{"title":"Usage","type":0,"sectionRef":"#","url":"docs/usage","content":"","keywords":""},{"title":"Usage","type":1,"pageTitle":"Usage","url":"docs/usage#usage","content":""},{"title":"With await","type":1,"pageTitle":"Usage","url":"docs/usage#with-await","content":"await redditImageFetcher.fetch({type: 'meme'}); //returns 1 meme await redditImageFetcher.fetch({type: 'wallpaper'}); //returns 1 wallpaper Copy "},{"title":"With callback","type":1,"pageTitle":"Usage","url":"docs/usage#with-callback","content":"redditImageFetcher.fetch({type: 'meme'}) .then(result => { }); //returns 1 meme Copy "},{"title":"Using options","type":1,"pageTitle":"Usage","url":"docs/usage#using-options","content":"await redditImageFetcher.fetch({ type: 'wallpaper', total: 50 }); //returns 50 wallpapers await redditImageFetcher.fetch({ type: 'meme', total: 50, addSubreddit: ['memes', 'funny'], removeSubreddit: ['dankmemes'] }); //returns 50 memes by filtering Copy "},{"title":"Custom","type":1,"pageTitle":"Usage","url":"docs/usage#custom","content":"It can be used other than fetching memes and wallpapers. Custom image fetch from given subreddits: await redditImageFetcher.fetch({ type: 'custom', total: 50, subreddit: ['cats', 'Catswhoyell', 'sleepingcats'] }); //returns 50 cat images Copy "},{"title":"Result","type":1,"pageTitle":"Usage","url":"docs/usage#result","content":"The functions are asynchronous and return array. Fetching  "},{"title":"Options","type":1,"pageTitle":"Usage","url":"docs/usage#options","content":"Property\tType\tDescription\tDefaulttype\tstring\tmeme, wallpaper or custom image to fetch\t'meme' total\tnumber\tHow many images to get. Max is 50\t1 subreddit\t[string]\tCustom subreddit libray\t[ ] addSubreddit\t[string]\tAdd subreddits to subreddit library\t[ ] removeSubreddit\t[string]\tRemove subreddits from subreddit library\t[ ] "}]